name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Check for bare imports
        run: node scripts/lint-no-bare-imports.js

      - name: Run unit tests
        run: npm test

  win-package:
    needs: test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install deps
        run: npm ci

      - name: Verify icon
        run: test -s assets/icon.ico || exit 1

      - name: Build app
        run: npm run bundle && npm run build:win32

      - name: Ensure preload in asar
        run: npx asar list dist/*.exe | grep dist/preload.js

      - name: Ensure preload in asar
        run: npx asar list dist/*.exe | grep dist/preload.js || exit 1

      - name: Ensure preload in asar
        run: npx asar list dist/*.exe | grep dist/preload.js || exit 1

      - name: Ensure preload in asar
        shell: bash
        run: |
          if [[ -f "$EXE_PATH" ]]; then
            npx asar list "$EXE_PATH" | grep dist/preload.js || exit 1
          fi

      - name: Ensure preload in asar
        shell: bash
        run: |
          if [[ -f "$EXE_PATH" ]]; then
            npx asar list "$EXE_PATH" | grep dist/preload.js || exit 1
          fi

      - name: Locate build artefacts
        id: artefacts
        shell: bash
        run: |
          EXE="$(ls -1 dist/win-unpacked/*.exe | head -n1)"
          ASAR="$(dirname "$EXE")/resources/app.asar"
          echo "exe=$EXE" >> $GITHUB_OUTPUT
          echo "asar=$ASAR" >> $GITHUB_OUTPUT

      - name: Check preload inside ASAR
        shell: bash
        run: |
          npx asar list "${{ steps.artefacts.outputs.asar }}" | grep -q 'dist/preload.js'

      - name: Locate artefacts
        id: artefacts
        shell: bash
        run: |
          EXE=$(ls -1 dist/win-unpacked/*.exe | head -n1)
          ASAR=$(dirname "$EXE")/resources/app.asar
          echo "exe=$EXE" >> "$GITHUB_OUTPUT"
          echo "asar=$ASAR" >> "$GITHUB_OUTPUT"

      - name: Check preload inside ASAR
        shell: bash
        run: |
          npx asar list "${{ steps.artefacts.outputs.asar }}" |
            grep -q '^dist/preload.js$'

      - name: Locate ASAR
        id: find_asar
        shell: bash
        run: |
          EXE=$(ls -1 dist/win-unpacked/*.exe | head -n1)
          ASAR=$(dirname "$EXE")/resources/app.asar
          echo "exe=$EXE" >> "$GITHUB_OUTPUT"
          echo "asar=$ASAR" >> "$GITHUB_OUTPUT"

      - name: Check preload inside ASAR
        shell: bash
        run: |
          npx asar list "${{ steps.find_asar.outputs.asar }}" |
            grep -q '^dist/preload.js$'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: partner-dashboard-win
          path: ${{ steps.find_asar.outputs.exe }}
